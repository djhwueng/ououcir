
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R 是免費軟體，不提供任何擔保。
在某些條件下您可以將其自由散布。
用 'license()' 或 'licence()' 來獲得散布的詳細條件。

R 是個合作計劃，有許多人為之做出了貢獻。
用 'contributors()' 來看詳細的情況並且
用 'citation()' 會告訴您如何在出版品中正確地參照 R 或 R 套件。

用 'demo()' 來看一些示範程式，用 'help()' 來檢視線上輔助檔案，或
用 'help.start()' 透過 HTML 瀏覽器來看輔助檔案。
用 'q()' 離開 R。

[Previously saved workspace restored]

> #setwd("~/Dropbox/ChihPingWang/Thesis/crossvalidationV2/")
> setwd("~/Dropbox/FCU/Teaching/Mentoring/2019Spring/ChihPingWang/Thesis/crossvalidationV2/")
> 
> rm(list=ls())
> 
> # Package
> library(TreeSim)
Loading required package: ape
Loading required package: geiger
Registered S3 method overwritten by 'geiger':
  method            from
  unique.multiPhylo ape 
> library(EasyABC)
Loading required package: abc
Loading required package: abc.data
Loading required package: nnet
Loading required package: quantreg
Loading required package: SparseM

Attaching package: ‘SparseM’

The following object is masked from ‘package:base’:

    backsolve

Loading required package: MASS
Loading required package: locfit
locfit 1.5-9.1 	 2013-03-22
> library(coda)
> library(Sim.DiffProc)
Package 'Sim.DiffProc', version 4.4
browseVignettes('Sim.DiffProc') for more informations.
> library(MCMCpack)
##
## Markov Chain Monte Carlo Package (MCMCpack)
## Copyright (C) 2003-2019 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park
##
## Support provided by the U.S. National Science Foundation
## (Grants SES-0350646 and SES-0350613)
##
> library(ape)
> library(abc)
> library(nlme)
> library(adephylo)
Loading required package: ade4
Registered S3 method overwritten by 'spdep':
  method   from
  plot.mst ape 
> library(maps)
> library(phylobase)

Attaching package: ‘phylobase’

The following object is masked from ‘package:ape’:

    edges

> library(phytools)
Registered S3 method overwritten by 'phytools':
  method    from
  plot.gfit abc 
> 
> # Model
> #source("~/Dropbox/ChihPingWang/EmpiricalMaincode/modelcodeV2/oubmbmabcv2.r")
> #source("~/Dropbox/ChihPingWang/EmpiricalMaincode/modelcodeV2/oubmcirabcv2.r")
> #source("~/Dropbox/ChihPingWang/EmpiricalMaincode/modelcodeV2/ououbmabcv2.r")
> #source("~/Dropbox/ChihPingWang/EmpiricalMaincode/modelcodeV2/ououcirabcv2.r")
> 
> source("~/Dropbox/FCU/Teaching/Mentoring/2019Spring/ChihPingWang/EmpiricalMaincode/modelcodeV2/oubmbmabcv2.r")
> source("~/Dropbox/FCU/Teaching/Mentoring/2019Spring/ChihPingWang/EmpiricalMaincode/modelcodeV2/oubmcirabcv2.r")
> source("~/Dropbox/FCU/Teaching/Mentoring/2019Spring/ChihPingWang/EmpiricalMaincode/modelcodeV2/ououbmabcv2.r")
> source("~/Dropbox/FCU/Teaching/Mentoring/2019Spring/ChihPingWang/EmpiricalMaincode/modelcodeV2/ououcirabcv2.r")
> 
> 
> sum.stat<-function(trait=trait,tree=tree){
+   names(trait)<-tree$tip.label
+   pic.trait<-pic(x=trait,phy=tree)
+   return(c(mean(trait),sd(trait),median(trait),skewness(trait),kurtosis(trait),mean(pic.trait),sd(pic.trait),median(pic.trait),skewness(pic.trait),kurtosis(pic.trait),phylosig(tree,x=trait,method = "K",test=T)$K,phylosig(tree,x=trait,method = "lambda",test=T)$lambda))
+ }
> 
> # Main
> reps<-1000
> treesize.array<-c(100)
> numbsim<-1;lambda<-2.0;mu<-0.5;frac<-0.6;age<-2
> #?TreeSim
> 
> # Model parameters
> root<-list(y.ou.sigmsq=1 ,y.ou.root=0, x1.ou.root=0, x2.ou.root=0,x1.bm.root=0, x2.bm.root=0)# Here we have root
> 
> alpha.y <- 0.2
> alpha.x <- 0.1
> theta.x <- 0.5
> sigmasq.x <- 1
> tau <- 1
> alpha.tau <- 0.25
> theta.tau <- 0.15
> sigmasq.tau <- 0.5
> b0 <- 0
> b1 <- 1
> b2 <- -1
> 
> oubmbm.params <- c(alpha.y,sigmasq.x,tau)
> ououbm.params<- c(alpha.y,alpha.x,theta.x,sigmasq.x,tau)
> oubmcir.params<-c(alpha.y,sigmasq.x,alpha.tau,theta.tau,sigmasq.tau)
> ououcir.params <- c(alpha.y,alpha.x,theta.x,sigmasq.x,alpha.tau,theta.tau,sigmasq.tau)
> reg.params<-c(b0,b1,b2)
> 
> for(treesizeIndex in 1:length(treesize.array) ){
+   #treesizeIndex<-1
+   treesize<-treesize.array[treesizeIndex]
+   tree<-sim.bd.taxa.age(n=treesize,numbsim=1,lambda=lambda,mu=mu,frac=frac,age=age,mrca=TRUE)[[1]]
+   tree<-reorder(tree,"postorder")
+ 
+   oubmbmstat<-matrix(0,reps,36)#12 statistics each for y,x1,x2
+   ououbmstat <- matrix(0,reps,36)
+   oubmcirstat <- matrix(0,reps,36)
+   ououcirstat<-matrix(0,reps,36)
+   
+   for (repIndex in 1:reps) {
+     if(repIndex %%50 == 0){
+     print(paste("treesize ", treesize.array[treesizeIndex]," rep ", repIndex,sep=""))}
+     oubmbm.trait <-oubmbmmodel(model.params=oubmbm.params,reg.params,root=root,tree=tree)
+     oubmbmstat[repIndex,]<-c(sum.stat(trait=oubmbm.trait$y,tree=tree),sum.stat(trait=oubmbm.trait$x1,tree=tree),sum.stat(trait=oubmbm.trait$x2,tree=tree))
+     
+     ououbm.trait <-ououbmmodel(model.params=ououbm.params,reg.params,root=root,tree=tree)
+     ououbmstat[repIndex,]<-c(sum.stat(trait=ououbm.trait$y,tree=tree),sum.stat(trait=ououbm.trait$x1,tree=tree),sum.stat(trait=ououbm.trait$x2,tree=tree))
+     
+     oubmcir.trait <-oubmcirmodel(model.params=oubmcir.params,reg.params,root=root,tree=tree)
+     oubmcirstat[repIndex,]<-c(sum.stat(trait=oubmcir.trait$y,tree=tree),sum.stat(trait=oubmcir.trait$x1,tree=tree),sum.stat(trait=oubmcir.trait$x2,tree=tree))
+     
+     ououcir.trait <-ououcirmodel(model.params=ououcir.params,reg.params,root=root,tree=tree)
+     ououcirstat[repIndex,]<-c(sum.stat(trait=ououcir.trait$y,tree=tree),sum.stat(trait=ououcir.trait$x1,tree=tree),sum.stat(trait=ououcir.trait$x2,tree=tree))
+     }
+   modelset <- c(rep("oubmbm",reps),rep("ououbm",reps),rep("oubmcir",reps),rep("ououcir",reps))
+   stat <- rbind(oubmbmstat,ououbmstat,oubmcirstat,ououcirstat)
+   colnames(stat)<-c(
+     "y.trait.mean","y.trait.sd","y.trait.median","y.trait.skewness","y.trait.kurtosis","y.pic.trait.mean","y.pic.trait.sd","y.pic.trait.mediam","y.pic.trait.skewness","y.pic.trait.kurtosis","y.pic.trait.K","y.pic.trait.lambda",
+     "x1.trait.mean","x1.trait.sd","x1.trait.median","x1.trait.skewness","x1.trait.kurtosis","x1.pic.trait.mean","x1.pic.trait.sd","x1.pic.trait.mediam","x1.pic.trait.skewness","x1.pic.trait.kurtosis","x1.pic.trait.K","x1.pic.trait.lambda",
+     "x2.trait.mean","x2.trait.sd","x2.trait.median","x2.trait.skewness","x2.trait.kurtosis","x2.pic.trait.mean","x2.pic.trait.sd","x2.pic.trait.mediam","x2.pic.trait.skewness","x2.pic.trait.kurtosis","x2.pic.trait.K","x2.pic.trait.lambda")
+   # Cross-Validation
+   cv.mod1 <- cv4postpr(modelset,stat,nval=100,tols=0.01,method="mnlogistic")
+   cv.mod <- cv4postpr(modelset,stat,nval=100,tols=0.01,method="rejection")
+   cv.mod$estim<-cv.mod1$estim
+   s<-summary(cv.mod)
+   save.image(paste(treesize.array[treesizeIndex], "cvfullmodel.RData",sep=""))
+ }
[1] "treesize 100 rep 50"
[1] "treesize 100 rep 100"
[1] "treesize 100 rep 150"
[1] "treesize 100 rep 200"
[1] "treesize 100 rep 250"
[1] "treesize 100 rep 300"
[1] "treesize 100 rep 350"
[1] "treesize 100 rep 400"
[1] "treesize 100 rep 450"
[1] "treesize 100 rep 500"
[1] "treesize 100 rep 550"
[1] "treesize 100 rep 600"
[1] "treesize 100 rep 650"
[1] "treesize 100 rep 700"
[1] "treesize 100 rep 750"
[1] "treesize 100 rep 800"
[1] "treesize 100 rep 850"
[1] "treesize 100 rep 900"
[1] "treesize 100 rep 950"
[1] "treesize 100 rep 1000"
Confusion matrix based on 100 samples for each model.

$tol0.01
        oubmbm oubmcir ououbm ououcir
oubmbm      78      11      4       7
oubmcir     27      48      0      25
ououbm       0       0     99       1
ououcir      4      11      1      84


Mean model posterior probabilities (rejection)

$tol0.01
        oubmbm oubmcir ououbm ououcir
oubmbm  0.7407  0.1274 0.0677  0.0642
oubmcir 0.2604  0.4145 0.0245  0.3006
ououbm  0.0532  0.0040 0.9148  0.0280
ououcir 0.0880  0.2811 0.0865  0.5445

There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
    user   system  elapsed 
5853.819  212.065 7634.151 
